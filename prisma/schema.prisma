// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id       String  @id @default(uuid()) @map("_id") @db.ObjectId
  userId   String  @unique
  name     String
  imageUrl String
  email    String
  hashedPassword String?

  posts Post[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post{
  id       String  @id @default(uuid()) @map("_id") @db.ObjectId
  name     String
  imageUrl String
  inviteCode String

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}

model Member{
  id       String  @id @default(uuid()) @map("_id") @db.ObjectId
  role MemberRole @default(GUEST)

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([postId])
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id       String  @id @default(uuid()) @map("_id") @db.ObjectId
  name     String
  type     ChannelType @default(TEXT)

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  postId String @db.ObjectId
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([postId])
}